{"version":3,"sources":["App.js","index.js"],"names":["initialState","num1","num3","num2","value","operator","reducer","state","action","console","log","payload","type","length","slice","includes","App","useReducer","dispatch","className","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9ddc073.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\nimport \"./styles.css\";\n\nconst initialState = {\n  num1: 0,\n  num3: \"\",\n  num2: \"\",\n  value: 0,\n  operator: \"\",\n};\nconst reducer = (state, action) => {\n  console.log(state, action.payload);\n  switch (action.type) {\n    case \"AC\":\n      return { ...state, operator: \"\", num2: \"\", num1: 0, value: 0 };\n\n    case \"C\":\n      if (state.num2.length > 1) {\n        return { ...state, num2: state.num2.slice(0, -1) };\n      } else {\n        return { ...state, num2: \"\" };\n      }\n\n    // case \"op1\":\n    //   if (!state.value) {\n    //     return {\n    //       ...state,\n    //       operator: action.payload,\n    //       num1: state.num2,\n    //       num2: \"\",\n    //     };\n    //   } else {\n    //     return {\n    //       ...state,\n    //       operator: action.payload,\n    //       num2: \"\",\n    //     };\n    //   }\n\n    case \"op\":\n      if (action.payload === \"+\") {\n        console.log(\"addition\");\n        return {\n          ...state,\n          value: +state.num1 + +state.num2,\n          num1: +state.num1 + +state.num2,\n          num2: \"\",\n          operator: action.payload,\n        };\n      } else if (action.payload === \"-\") {\n        console.log(\"subtraction\");\n        return {\n          ...state,\n          value: +state.num1 - +state.num2,\n          num1: +state.num1 - +state.num2,\n          num2: \"\",\n          operator: action.payload,\n        };\n      } else if (action.payload === \"*\") {\n        console.log(\"multiplication\");\n        return {\n          ...state,\n          value: +state.num1 * +state.num2,\n          num1: +state.num1 * +state.num2,\n          num2: \"\",\n          operator: action.payload,\n        };\n      } else if (action.payload === \"/\") {\n        console.log(\"division\");\n        return {\n          ...state,\n          value: +state.num1 / +state.num2,\n          num1: +state.num1 / +state.num2,\n          num2: \"\",\n          operator: action.payload,\n        };\n      } else return state;\n\n    case \"eq\":\n      if (state.operator === \"+\") {\n        console.log(\"addition\");\n        return {\n          ...state,\n          value: +state.num1 + +state.num2,\n          num1: +state.num1 + +state.num2,\n          num2: \"\",\n          operator: \"\",\n        };\n      } else if (state.operator === \"-\") {\n        console.log(\"subtraction\");\n        return {\n          ...state,\n          value: +state.num1 - +state.num2,\n          num1: +state.num1 - +state.num2,\n          num2: \"\",\n          operator: \"\",\n        };\n      } else if (state.operator === \"*\") {\n        console.log(\"multiplication\");\n        return {\n          ...state,\n          value: +state.num1 * +state.num2,\n          num1: +state.num1 * +state.num2,\n          num2: \"\",\n          operator: \"\",\n        };\n      } else if (state.operator === \"/\") {\n        console.log(\"division\");\n        return {\n          ...state,\n          value: +state.num1 / +state.num2,\n          num1: +state.num1 / +state.num2,\n          num2: \"\",\n          operator: \"\",\n        };\n      } else return state;\n\n    case \"num\":\n      if (state.num2 === \"\" && action.payload === \".\") {\n        return { ...state, num2: \"0\" + action.payload };\n      } else if (state.num2 === \"\") {\n        return { ...state, num2: action.payload };\n      } else {\n        if (action.payload === \".\" && state.num2.includes(\".\")) {\n          return state;\n        } else {\n          return { ...state, num2: state.num2 + action.payload };\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default function App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  console.log(state, state.value);\n  return (\n    <div>\n      <h1>Calculator</h1>\n\n      <div className=\"calculator\">\n        <div className=\"container\">\n          <div className=\"display\">\n            {!state.num2\n              ? state.operator\n                ? state.value\n                : state.value\n              : state.num2}\n            <span className=\"cursor\" />\n          </div>\n          <button className=\"btn\" onClick={() => dispatch({ type: \"AC\" })}>\n            AC\n          </button>\n          <button className=\"btn\" onClick={() => dispatch({ type: \"C\" })}>\n            C\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => dispatch({ type: \"op\", payload: \"*\" })}\n          >\n            x\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => dispatch({ type: \"op\", payload: \"/\" })}\n          >\n            /\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => dispatch({ type: \"num\", payload: \"7\" })}\n          >\n            7\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => dispatch({ type: \"num\", payload: \"8\" })}\n          >\n            8\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => dispatch({ type: \"num\", payload: \"9\" })}\n          >\n            9\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => dispatch({ type: \"op\", payload: \"+\" })}\n          >\n            +\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => dispatch({ type: \"num\", payload: \"4\" })}\n          >\n            4\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => dispatch({ type: \"num\", payload: \"5\" })}\n          >\n            5\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => dispatch({ type: \"num\", payload: \"6\" })}\n          >\n            6\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => dispatch({ type: \"op\", payload: \"-\" })}\n          >\n            -\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => dispatch({ type: \"num\", payload: \"1\" })}\n          >\n            1\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => dispatch({ type: \"num\", payload: \"2\" })}\n          >\n            2\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => dispatch({ type: \"num\", payload: \"3\" })}\n          >\n            3\n          </button>\n          <button\n            className=\"btn zero \"\n            onClick={() => dispatch({ type: \"num\", payload: \"0\" })}\n          >\n            0\n          </button>\n          <button\n            className=\"btn\"\n            onClick={() => dispatch({ type: \"num\", payload: \".\" })}\n          >\n            .\n          </button>\n          <button className=\"btn eq\" onClick={() => dispatch({ type: \"eq\" })}>\n            =\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n\n    <App />, document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}